$box_image = ENV['BOX_IMAGE'].to_s.strip.empty? ? 'generic/ubuntu1804'.freeze : ENV['BOX_IMAGE']

if $kubernetes_pkg_version_suffix == ''
    $kubernetes_pkg_version_suffix = '-00'
end

$osPrepareScript = <<SCRIPT
set -x

sed -i 's/^DNS=.*/DNS=8.8.8.8 8.8.4.4/' /etc/systemd/resolved.conf

if [ -n "#{HTTP_PROXY}" ]; then
    cat <<EOF > /etc/apt/apt.conf.d/http-proxy.conf
Acquire::http::Proxy "#{HTTP_PROXY}";
EOF
fi
if [ -n "#{HTTPS_PROXY}" ]; then
    cat <<EOF > /etc/apt/apt.conf.d/https-proxy.conf
Acquire::https::Proxy "#{HTTPS_PROXY}";
EOF
fi

sudo update-alternatives --set iptables /usr/sbin/iptables-legacy
sudo update-alternatives --set ip6tables /usr/sbin/ip6tables-legacy
sudo update-alternatives --set arptables /usr/sbin/arptables-legacy
sudo update-alternatives --set ebtables /usr/sbin/ebtables-legacy

retries=5
for ((i=1; i<=retries; i++)); do
    apt-get update
    apt-get upgrade -y && \
        break
    [[ $retries -eq i ]] && { echo "Failed to update OS packages after 5 tries"; exit 1; }
done

retries=5
for ((i=1; i<=retries; i++)); do
    apt-get update
    apt-get upgrade -y
    apt-get -y install apt-transport-https curl software-properties-common ca-certificates && \
        break

    [[ $retries -eq i ]] && { echo "Failed to install apt-transport-https and other dependenices after 5 tries"; exit 1; }
done

if [ -n '#{INSTALL_ADDITIONAL_PACKAGES}' ]; then
    apt-get clean
    retries=5
    for ((i=1; i<=retries; i++)); do
        apt-get install -y #{INSTALL_ADDITIONAL_PACKAGES} && \
            break
        [[ $retries -eq i ]] && { echo "Failed to install additional packages (#{INSTALL_ADDITIONAL_PACKAGES}) after 5 tries"; exit 1; }
    done
fi
SCRIPT

$docker_version = '5:18.09.1~3-0~ubuntu-bionic'

$containerRuntimeInstallScript = <<SCRIPT
set -x
(
    if [ -n "#{HTTP_PROXY}" ]; then
        export HTTP_PROXY="#{HTTP_PROXY}" HTTPS_PROXY="#{HTTPS_PROXY}" NO_PROXY="#{NO_PROXY}"
    fi
    curl --retry 5 -fsSL https://download.docker.com/linux/ubuntu/gpg
) | sudo apt-key add -
add-apt-repository \
   "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
   $(lsb_release -cs) \
   stable"

retries=5
for ((i=1; i<=retries; i++)); do
    apt-get update
    apt-get -y install docker-ce=#{$docker_version} && \
        break

    [[ $retries -eq i ]] && { echo "Failed to install docker-ce after 5 tries"; exit 1; }
done
SCRIPT

$kubeletExtraArgsFile = '/etc/default/kubelet'

if $kube_network != 'none'
    $kube_network = 'canal'
end
